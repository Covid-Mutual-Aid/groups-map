service:
  name: lambdas
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  GROUPS_TABLE: ${self:provider.stage}-groups10
  LOCATION_SEARCHES_TABLE: ${self:provider.stage}-location-search
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      domain:
        sources:
          - table: ${self:custom.GROUPS_TABLE}
            sources: [./migrations/groups-seed.json]
  serverless-offline:
    httpPort: 4000
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: ${opt:region, 'eu-west-2'}
  stage: ${opt:stage, 'dev'}
  profile: covid
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    GROUPS_TABLE: ${self:custom.GROUPS_TABLE}
    LOCATION_SEARCHES_TABLE: ${self:custom.LOCATION_SEARCHES_TABLE}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { 'Fn::GetAtt': ['ExportDB', 'Arn'] } #you will also see the logical IDs below where they are provisioned
        - { 'Fn::GetAtt': ['DynamoDbLocationSearches', 'Arn'] }

functions:
  - ${file(./services/database/functions.yml)}
  - ${file(./services/google/functions.yml)}
  - ${file(./services/data/functions.yml)}
  - ${file(./services/searches/functions.yml)}

resources:
  Resources:
    ExportDB:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.GROUPS_TABLE}
    DynamoDbLocationSearches:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.LOCATION_SEARCHES_TABLE}
