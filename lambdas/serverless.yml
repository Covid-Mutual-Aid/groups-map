service:
  name: lambdas
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  DB_TABLE: ${self:provider.stage}-groups
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      domain:
        sources:
          - table: ${self:custom.DB_TABLE}
            sources: [./migrations/groups-seed.json]
  serverless-offline:
    httpPort: 4000
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: ${opt:region, 'eu-west-2'}
  stage: ${opt:stage, 'dev'}
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    DB_PREFIX: ${self:custom.DB_TABLE}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'dynamodb:*'
      Resource:
        - 'arn:aws:dynamodb:*:*'

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello
          cors: true

resources:
  Resources: ${file(migrations/groups.yml)}
